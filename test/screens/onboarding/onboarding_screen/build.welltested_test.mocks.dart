// Mocks generated by Mockito 5.4.4 from annotations
// in ease_expense/test/screens/onboarding/onboarding_screen/build.welltested_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:ease_expense/controllers/user_controller.dart' as _i6;
import 'package:ease_expense/database/controllers/db_controller.dart' as _i2;
import 'package:ease_expense/models/user_model.dart' as _i5;
import 'package:flutter/material.dart' as _i3;
import 'package:get/get.dart' as _i4;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDbController_0 extends _i1.SmartFake implements _i2.DbController {
  _FakeDbController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_2 extends _i1.SmartFake implements _i4.RxString {
  _FakeRxString_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_3 extends _i1.SmartFake implements _i4.RxBool {
  _FakeRxBool_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_4 extends _i1.SmartFake implements _i4.RxInt {
  _FakeRxInt_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_5 extends _i1.SmartFake implements _i5.UserModel {
  _FakeUserModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_6<T> extends _i1.SmartFake
    implements _i4.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserController].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserController extends _i1.Mock implements _i6.UserController {
  MockUserController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DbController get dbController => (super.noSuchMethod(
        Invocation.getter(#dbController),
        returnValue: _FakeDbController_0(
          this,
          Invocation.getter(#dbController),
        ),
      ) as _i2.DbController);

  @override
  set dbController(_i2.DbController? _dbController) => super.noSuchMethod(
        Invocation.setter(
          #dbController,
          _dbController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.TextEditingController get currencyController => (super.noSuchMethod(
        Invocation.getter(#currencyController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#currencyController),
        ),
      ) as _i3.TextEditingController);

  @override
  set currencyController(_i3.TextEditingController? _currencyController) =>
      super.noSuchMethod(
        Invocation.setter(
          #currencyController,
          _currencyController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxString get currency => (super.noSuchMethod(
        Invocation.getter(#currency),
        returnValue: _FakeRxString_2(
          this,
          Invocation.getter(#currency),
        ),
      ) as _i4.RxString);

  @override
  set currency(_i4.RxString? _currency) => super.noSuchMethod(
        Invocation.setter(
          #currency,
          _currency,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxBool get showMonetSwitch => (super.noSuchMethod(
        Invocation.getter(#showMonetSwitch),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#showMonetSwitch),
        ),
      ) as _i4.RxBool);

  @override
  set showMonetSwitch(_i4.RxBool? _showMonetSwitch) => super.noSuchMethod(
        Invocation.setter(
          #showMonetSwitch,
          _showMonetSwitch,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxInt get decimalSep => (super.noSuchMethod(
        Invocation.getter(#decimalSep),
        returnValue: _FakeRxInt_4(
          this,
          Invocation.getter(#decimalSep),
        ),
      ) as _i4.RxInt);

  @override
  set decimalSep(_i4.RxInt? _decimalSep) => super.noSuchMethod(
        Invocation.setter(
          #decimalSep,
          _decimalSep,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxInt get thousandSep => (super.noSuchMethod(
        Invocation.getter(#thousandSep),
        returnValue: _FakeRxInt_4(
          this,
          Invocation.getter(#thousandSep),
        ),
      ) as _i4.RxInt);

  @override
  set thousandSep(_i4.RxInt? _thousandSep) => super.noSuchMethod(
        Invocation.setter(
          #thousandSep,
          _thousandSep,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxBool get monet => (super.noSuchMethod(
        Invocation.getter(#monet),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#monet),
        ),
      ) as _i4.RxBool);

  @override
  set monet(_i4.RxBool? _monet) => super.noSuchMethod(
        Invocation.setter(
          #monet,
          _monet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get prefLoaded => (super.noSuchMethod(
        Invocation.getter(#prefLoaded),
        returnValue: false,
      ) as bool);

  @override
  set prefLoaded(bool? _prefLoaded) => super.noSuchMethod(
        Invocation.setter(
          #prefLoaded,
          _prefLoaded,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.UserModel get configs => (super.noSuchMethod(
        Invocation.getter(#configs),
        returnValue: _FakeUserModel_5(
          this,
          Invocation.getter(#configs),
        ),
      ) as _i5.UserModel);

  @override
  set configs(_i5.UserModel? _configs) => super.noSuchMethod(
        Invocation.setter(
          #configs,
          _configs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxString get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _FakeRxString_2(
          this,
          Invocation.getter(#version),
        ),
      ) as _i4.RxString);

  @override
  set version(_i4.RxString? _version) => super.noSuchMethod(
        Invocation.setter(
          #version,
          _version,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_6<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i4.InternalFinalCallback<void>);

  @override
  _i4.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_6<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i4.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> fetchPreferences() => (super.noSuchMethod(
        Invocation.method(
          #fetchPreferences,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  void checkMonet() => super.noSuchMethod(
        Invocation.method(
          #checkMonet,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> updateCurrency() => (super.noSuchMethod(
        Invocation.method(
          #updateCurrency,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateThousandSeparator() => (super.noSuchMethod(
        Invocation.method(
          #updateThousandSeparator,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateDecimalSeparator() => (super.noSuchMethod(
        Invocation.method(
          #updateDecimalSeparator,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateMonet() => (super.noSuchMethod(
        Invocation.method(
          #updateMonet,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateOnboarding() => (super.noSuchMethod(
        Invocation.method(
          #updateOnboarding,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListener(_i8.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    dynamic listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListenerId(
    Object? key,
    _i8.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
